generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  amountPaid    Float     @default(0)
  totalCredits  Int       @default(0)
  usedCredits   Int       @default(0)

  createdAt    DateTime       @default(now())
  accounts     Account[]
  sessions     Session[]
  Transactions Transactions[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  providerAccountId String
  access_token      String?
  expires_at        Int?
  id_token          String?
  provider          String
  refresh_token     String?
  scope             String?
  session_state     String?
  token_type        String?
  type              String
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Transactions {
  id                    String   @id @default(cuid())
  userEmail             String
  email                 String
  amount                Float
  stripePaymentIntentId String
  createdAt             DateTime @default(now())
  user                  User     @relation(fields: [userEmail], references: [id], onDelete: Cascade)
}

model Plans {
  id            String @id @default(cuid())
  stripePlanId  String @unique
  stripePriceId String @unique
  unit_amount   Float
  currency      String
  credit        Int
}
